// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.school.base.domain;

import com.school.base.domain.RoleDataOnDemand;
import com.school.base.domain.School;
import com.school.base.domain.SchoolDataOnDemand;
import com.school.base.domain.SchoolLogin;
import com.school.base.domain.SchoolLoginDataOnDemand;
import com.school.base.domain.StaffDataOnDemand;
import java.security.SecureRandom;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Random;
import javax.validation.ConstraintViolation;
import javax.validation.ConstraintViolationException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

privileged aspect SchoolLoginDataOnDemand_Roo_DataOnDemand {
    
    declare @type: SchoolLoginDataOnDemand: @Component;
    
    private Random SchoolLoginDataOnDemand.rnd = new SecureRandom();
    
    private List<SchoolLogin> SchoolLoginDataOnDemand.data;
    
    @Autowired
    RoleDataOnDemand SchoolLoginDataOnDemand.roleDataOnDemand;
    
    @Autowired
    SchoolDataOnDemand SchoolLoginDataOnDemand.schoolDataOnDemand;
    
    @Autowired
    StaffDataOnDemand SchoolLoginDataOnDemand.staffDataOnDemand;
    
    public SchoolLogin SchoolLoginDataOnDemand.getNewTransientSchoolLogin(int index) {
        SchoolLogin obj = new SchoolLogin();
        setLoginStatusId(obj, index);
        setNoOfAttemptsRemaining(obj, index);
        setPassword(obj, index);
        setSchoolId(obj, index);
        setUserName(obj, index);
        return obj;
    }
    
    public void SchoolLoginDataOnDemand.setLoginStatusId(SchoolLogin obj, int index) {
        Integer loginStatusId = new Integer(index);
        obj.setLoginStatusId(loginStatusId);
    }
    
    public void SchoolLoginDataOnDemand.setNoOfAttemptsRemaining(SchoolLogin obj, int index) {
        Integer noOfAttemptsRemaining = new Integer(index);
        obj.setNoOfAttemptsRemaining(noOfAttemptsRemaining);
    }
    
    public void SchoolLoginDataOnDemand.setPassword(SchoolLogin obj, int index) {
        String password = "password_" + index;
        if (password.length() > 500) {
            password = password.substring(0, 500);
        }
        obj.setPassword(password);
    }
    
    public void SchoolLoginDataOnDemand.setSchoolId(SchoolLogin obj, int index) {
        School schoolId = schoolDataOnDemand.getRandomSchool();
        obj.setSchoolId(schoolId);
    }
    
    public void SchoolLoginDataOnDemand.setUserName(SchoolLogin obj, int index) {
        String userName = "userName_" + index;
        if (userName.length() > 100) {
            userName = userName.substring(0, 100);
        }
        obj.setUserName(userName);
    }
    
    public SchoolLogin SchoolLoginDataOnDemand.getSpecificSchoolLogin(int index) {
        init();
        if (index < 0) {
            index = 0;
        }
        if (index > (data.size() - 1)) {
            index = data.size() - 1;
        }
        SchoolLogin obj = data.get(index);
        Integer id = obj.getSchoolLoginId();
        return SchoolLogin.findSchoolLogin(id);
    }
    
    public SchoolLogin SchoolLoginDataOnDemand.getRandomSchoolLogin() {
        init();
        SchoolLogin obj = data.get(rnd.nextInt(data.size()));
        Integer id = obj.getSchoolLoginId();
        return SchoolLogin.findSchoolLogin(id);
    }
    
    public boolean SchoolLoginDataOnDemand.modifySchoolLogin(SchoolLogin obj) {
        return false;
    }
    
    public void SchoolLoginDataOnDemand.init() {
        int from = 0;
        int to = 10;
        data = SchoolLogin.findSchoolLoginEntries(from, to);
        if (data == null) {
            throw new IllegalStateException("Find entries implementation for 'SchoolLogin' illegally returned null");
        }
        if (!data.isEmpty()) {
            return;
        }
        
        data = new ArrayList<SchoolLogin>();
        for (int i = 0; i < 10; i++) {
            SchoolLogin obj = getNewTransientSchoolLogin(i);
            try {
                obj.persist();
            } catch (final ConstraintViolationException e) {
                final StringBuilder msg = new StringBuilder();
                for (Iterator<ConstraintViolation<?>> iter = e.getConstraintViolations().iterator(); iter.hasNext();) {
                    final ConstraintViolation<?> cv = iter.next();
                    msg.append("[").append(cv.getRootBean().getClass().getName()).append(".").append(cv.getPropertyPath()).append(": ").append(cv.getMessage()).append(" (invalid value = ").append(cv.getInvalidValue()).append(")").append("]");
                }
                throw new IllegalStateException(msg.toString(), e);
            }
            obj.flush();
            data.add(obj);
        }
    }
    
}
